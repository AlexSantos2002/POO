Problema D:  Círculo 
Um círculo define-se por um Ponto e um raio. A tarefa deste problema é desenvolver a classe Circulo, 
que recebe um ponto do primeiro quadrante e um raio double maior do que zero. Todo o círculo deve 
estar no primeiro quadrante, sendo necessário testar a condição invariante de instância. 
Dado um objeto da classe Circulo, é necessário calcular o seu perímetro. 
Entrada  
A entrada é composta por duas linhas.  
A primeira linha contém dois números inteiros XC, YC, que representam as coordenadas cartesianas 
no centro do círculo. 
A segunda linha é um double que representa o raio do círculo  
Saída  
Uma linha com uma das opções seguintes: 
i) “Ponto:vi”; mensagem indicando que um ponto não é do primeiro quadrante; 
ii) “Circulo:vi”; indicação de que o círculo não está todo no primeiro quadrante;  
iii) A parte inteira do perímetro do círculo, se existir. 
A saída tem uma única linha, que contém a parte inteira da distância entre os dois pontos dados.  
Exemplo de Entrada 1 
2 2 
1.0 
Exemplo de Saída 1 
6 
 
 
Exemplo de Entrada 2 -1 0 
1.0 
Exemplo de Saída 2 
Ponto:vi 
 
Exemplo de Entrada 3 
1 1 
2.0 
Exemplo de Saída 3 
Circulo:vi 
 
 
Restrições complementares 
O programa deve completar a classe Ponto definida nos problemas anteriores, acrescentando um novo 
construtor que recebe dois inteiros correspondentes às coordenadas cartesianas (x,y). Naturalmente 
que a classe Ponto deve assegurar a consistência entre coordenadas polares e Cartesianas.  
 
Nos comentários indique  
i) Uma linha com a descrição da responsabilidade da classe ou do que o método faz 
ii) @author (apenas para classes) 
iii) @version (apenas para classes; inclua uma data) 
iv) @inv (apenas para classes; inclua uma descrição da invariante usada) 
v) @param (apenas para métodos e construtores) 
vi) @return (apenas para métodos) 
vii) @see (qualquer referência bibliográfica ou sítio web consultado para o desenvolvimento 
do código respetivo) 